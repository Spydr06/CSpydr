#define PARSER_TESTS {"parsing empty file", test_parsing_empty_file},                    \
                     {"parsing simple main function", test_parsing_simple_main_func},    \
                     {"parsing complex main function", test_parsing_complex_main_func}   \

#define PARSER_TEST_FUNC(name, src, msg, code) void name(void) { \
    SrcFile_T* file = get_file(1, src);                          \
    TEST_ASSERT(file != NULL);                                   \
    ErrorHandler_T* eh = init_errorhandler(file);                \
    TEST_ASSERT(eh != NULL);                                     \
    Lexer_T* lexer = init_lexer(file, eh);                       \
    TEST_ASSERT(lexer != NULL);                                  \
    Parser_T* parser = init_parser(lexer);                       \
    TEST_ASSERT(parser != NULL);                                 \
    parser->silent = 1;                                          \
    ASTProg_T* prog = parse(parser, msg);                        \
    TEST_ASSERT(prog != NULL);                                   \
    code                                                         \
    free_ast_prog(prog);                                         \
    free_parser(parser);                                         \
    free_lexer(lexer);                                           \
    free_errorhandler(eh);                                       \
}                                                                

PARSER_TEST_FUNC(test_parsing_empty_file, " ", "00",)

PARSER_TEST_FUNC(test_parsing_simple_main_func, "fn main(): i32 {}", "01",)

PARSER_TEST_FUNC(test_parsing_complex_main_func, "fn main(argc: i32, argv: **char): i32 {}", "02",)