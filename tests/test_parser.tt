#define PARSER_TESTS {"parsing empty file", test_parsing_empty_file},                    \
                     {"parsing simple main function", test_parsing_simple_main_func},    \
                     {"parsing complex main function", test_parsing_complex_main_func}   \


#define PARSER_TEST_FUNC(name, src, msg, code) void name(void) { \
    srcFile_T* file = getFile(1, src);                           \
    TEST_ASSERT(file != NULL);                                   \
    errorHandler_T* eh = initErrorHandler(file);                 \
    TEST_ASSERT(eh != NULL);                                     \
    lexer_T* lexer = initLexer(file, eh);                        \
    TEST_ASSERT(lexer != NULL);                                  \
    parser_T* parser = initParser(lexer);                        \
    TEST_ASSERT(parser != NULL);                                 \
    parser->silent = 1;                                          \
    ASTProgram_T* prog = parserParse(parser, msg);               \
    TEST_ASSERT(prog != NULL);                                   \
    code                                                         \
    freeASTProgram(prog);                                        \
    freeParser(parser);                                          \
    freeLexer(lexer);                                            \
    freeErrorHandler(eh);                                        \
}                                                                

PARSER_TEST_FUNC(test_parsing_empty_file, " ", "00",)

PARSER_TEST_FUNC(test_parsing_simple_main_func, "fn main(): i32 {}", "01",)

PARSER_TEST_FUNC(test_parsing_complex_main_func, "fn main(argc: i32, argv: **char): i32 {}", "02",)