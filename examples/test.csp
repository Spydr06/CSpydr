# a basic test program used for developing this programming language
# this is a test to show, how I want to design this language, so this will most likely not compile

##
    multi line comments
##

mod main; # something like a namespace or so

type Foo: struct {
    x: i32
    y: i32

    fn init(x: i32, y: i32)
    fn inc() {
        @.x++;
        @.y++;
    }
}

fn Foo::init(x: i32, y: i32) {
    @.x = x; # using @ as 'this'
    @.y = y;
}

let test: bool = true;
let testArr: i32[] = [4, 4, 4];

fn main(argc: i32, argv: str[]): i32 {
    let foo: u64 = 5;
    let arr: i32[2][2] = nil;
    arr = [[1, 3], test - 1];

    loop i: 0..10 {  # for loop

    }

    loop i, el: arr { # foreach loop

    }

    loop true { # while loop

    }

    match foo { # match / switch statement
        0..3 => {

        }

        4.. => {

        }

        _ => {  # default branch

        }
    }

    let string: str = "
    multiline
    strings
    will
    be
    supported
    ";

    let inst: Foo = {x: 2, y: 3};
    let inst2: Foo = new Foo(2, 3); # calls Foo::init

    0
}

fn print_(msg: str) 
    printf("%s\n", msg);