import "syscall.csp";
import "types.csp";

namespace std {
    namespace process {
        const CLONE_NEWTIME: i32        = 0x00000080;
        const CLONE_VM: i32             = 0x00000100;
        const CLONE_FS: i32             = 0x00000200;
        const CLONE_FILES: i32          = 0x00000400;
        const CLONE_SIGHAND: i32        = 0x00000800;
        const CLONE_PIDFD: i32          = 0x00001000;
        const CLONE_PTRACE: i32         = 0x00002000;
        const CLONE_VFORK: i32          = 0x00004000;
        const CLONE_PARENT: i32         = 0x00008000;
        const CLONE_THREAD: i32         = 0x00010000;
        const CLONE_NEWNS: i32          = 0x00020000;
        const CLONE_SYSVSEM: i32        = 0x00040000;
        const CLONE_SETTLS: i32         = 0x00080000;
        const CLONE_PARENT_SETTID: i32  = 0x00100000;
        const CLONE_CHILD_CLEARTID: i32 = 0x00200000;
        const CLONE_DETACHED: i32       = 0x00400000;
        const CLONE_UNTRACED: i32       = 0x00800000;
        const CLONE_CHILD_SETTID: i32   = 0x01000000;
        const CLONE_NEWCGROUP: i32      = 0x02000000;
        const CLONE_NEWUTS: i32         = 0x04000000;
        const CLONE_NEWIPC: i32         = 0x08000000;
        const CLONE_NEWUSER: i32        = 0x10000000;
        const CLONE_NEWPID: i32         = 0x20000000;
        const CLONE_NEWNET: i32         = 0x40000000;
        const CLONE_IO: i32             = 0x80000000;

        fn exit(exit_code: i32) 
        {
            syscall::exit(exit_code);
        }
    }
}