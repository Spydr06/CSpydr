# a basic implementation of the libc __libc_complex!.h header for the CSpydr programming language

import "link.csp";

namespace libc {
extern "C" {

    fn casin(z: __libc_complex! f64): __libc_complex! f64;
    fn casinf(z: __libc_complex! f32): __libc_complex! f32;
    fn casinl(z: __libc_complex! f80): __libc_complex! f80;
    
    fn cacos(z: __libc_complex! f64): __libc_complex! f64;
    fn cacosf(z: __libc_complex! f32): __libc_complex! f32;
    fn cacosl(z: __libc_complex! f80): __libc_complex! f80;

    fn catan(z: __libc_complex! f64): __libc_complex! f64;
    fn catanf(z: __libc_complex! f32): __libc_complex! f32;
    fn catanl(z: __libc_complex! f80): __libc_complex! f80;

    fn ccos(z: __libc_complex! f64): __libc_complex! f64;
    fn ccosf(z: __libc_complex! f32): __libc_complex! f32;
    fn ccosl(z: __libc_complex! f80): __libc_complex! f80;

    fn csin(z: __libc_complex! f64): __libc_complex! f64;
    fn csinf(z: __libc_complex! f32): __libc_complex! f32;
    fn csinl(z: __libc_complex! f80): __libc_complex! f80;

    fn ctan(z: __libc_complex! f64): __libc_complex! f64;
    fn ctanf(z: __libc_complex! f32): __libc_complex! f32;
    fn ctanl(z: __libc_complex! f80): __libc_complex! f80;

    fn cacosh(z: __libc_complex! f64): __libc_complex! f64;
    fn cacoshf(z: __libc_complex! f32): __libc_complex! f32;
    fn cacoshl(z: __libc_complex! f80): __libc_complex! f80;

    fn casinh(z: __libc_complex! f64): __libc_complex! f64;
    fn casinhf(z: __libc_complex! f32): __libc_complex! f32;
    fn cansinl(z: __libc_complex! f80): __libc_complex! f80;

    fn catanh(z: __libc_complex! f64): __libc_complex! f64;
    fn catanhf(z: __libc_complex! f32): __libc_complex! f32;
    fn catanhl(z: __libc_complex! f80): __libc_complex! f80;

    fn ccosh(z: __libc_complex! f64): __libc_complex! f64;
    fn ccoshf(z: __libc_complex! f32): __libc_complex! f32;
    fn ccoshl(z: __libc_complex! f80): __libc_complex! f80;

    fn csinh(z: __libc_complex! f64): __libc_complex! f64;
    fn csinhf(z: __libc_complex! f32): __libc_complex! f32;
    fn csinhl(z: __libc_complex! f80): __libc_complex! f80;

    fn ctahh(z: __libc_complex! f64): __libc_complex! f64;
    fn ctanhf(z: __libc_complex! f32): __libc_complex! f32;
    fn ctanhl(z: __libc_complex! f80): __libc_complex! f80;

    fn cexp(z: __libc_complex! f64): __libc_complex! f64;
    fn cexpf(z: __libc_complex! f32): __libc_complex! f32;
    fn cexpl(z: __libc_complex! f80): __libc_complex! f80;

    fn clog(z: __libc_complex! f64): __libc_complex! f64;
    fn clogf(z: __libc_complex! f32): __libc_complex! f32;
    fn clogl(z: __libc_complex! f80): __libc_complex! f80;

    fn cabs(z: __libc_complex! f64): f64;
    fn cabsf(z: __libc_complex! f32): f32;
    fn cabsl(z: __libc_complex! f80): f80;

    fn cpow(x: __libc_complex! f64, y: __libc_complex! f64): __libc_complex! f64;
    fn cpowf(x: __libc_complex! f32, y: __libc_complex! f32): __libc_complex! f32;
    fn cpowl(x: __libc_complex! f80, y: __libc_complex! f80): __libc_complex! f80;

    fn csqrt(z: __libc_complex! f64): __libc_complex! f64;
    fn csqrtf(z: __libc_complex! f32): __libc_complex! f32;
    fn csqrtl(z: __libc_complex! f80): __libc_complex! f80;

    fn carg(z: __libc_complex! f64): f64;
    fn cargf(z: __libc_complex! f32): f32;
    fn cargl(z: __libc_complex! f80): f80;

    fn cimag(z: __libc_complex! f64): f64;
    fn cimagf(z: __libc_complex! f32): f32;
    fn cimagl(z: __libc_complex! f80): f80;

    fn CMPLX(x: f64, y: f64): __libc_complex! f64;
    fn CMPLXF(x: f32, y: f32): __libc_complex! f32;
    fn CMPLXL(x: f80, y: f80): __libc_complex! f80;

    fn conj(z: __libc_complex! f64): __libc_complex! f64;
    fn conjf(z: __libc_complex! f32): __libc_complex! f32;
    fn conjl(z: __libc_complex! f80): __libc_complex! f80;

    fn cproj(z: __libc_complex! f64): __libc_complex! f64;
    fn cprojf(z: __libc_complex! f32): __libc_complex! f32;
    fn cprojl(z: __libc_complex! f80): __libc_complex! f80;

    fn creal(z: __libc_complex! f64): f64;
    fn crealf(z: __libc_complex! f32): f32;
    fn creall(z: __libc_complex! f80): f80;

}
}