import "stddef.csp";

extern {

    fn memcpy(dest: &void, src: const &void, n: size_t): &void;
    fn memmove(dest: &void, src: const &void, n: size_t): &void;
    fn memset(s: &void, c: i32, n: size_t): &void;
    fn memcmp(s1: const &void, s2: const &void, n: size_t): i32;

    fn strcpy(dest: &char, src: const &char): &char;
    fn strncpy(dest: &char, src: const &char, n: size_t): &char;

    fn strcat(dest: &char, src: const &char): &char;
    fn strncat(dest: &char, src: const &char, n: size_t): &char;

    fn strcmp(s1: const &char, s2: const &char): i32;
    fn strncmp(s1: const &char, s2: const &char, n: size_t): i32;

    fn strcoll(s1: const &char, s2: const &char): i32;
    fn strxfrm(dest: &char, src: const &char, n: size_t): i32;

    fn strcspn(s: const &char, reject: const &char): size_t;
    fn strspn(s: const &char, accept: const &char): size_t;

    fn strtok(s: &char, delim: const &char): &char;
    fn __strtok_r(s: &char, delim: const &char, save_ptr: &&char): &char;

    fn strlen(s: const &char): size_t;

    fn strerror(errnum: i32): &char;

}