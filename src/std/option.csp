import "memory.csp";

macro option(ty) {
    (
        struct {
            is_some: bool,
            value: (ty)
        }
    )
}

macro none(ty) {
    (
        {false, 0}: struct {
            is_some: bool,
            value: (ty)
        }
    )
}

macro some(val) {
    (
        {true, (val)}: struct {
            is_some: bool,
            value: typeof (val)
        }
    )
}

macro is_some(option) {
    ((option).is_some)
}

macro is_none(option) {
    (!(option).is_some)
}

macro unwrap(option) {
    ((option).value)
}

macro unwrap_or(option, or) {
    (if (option).is_some => (option).value else (or): typeof (option).value)
}