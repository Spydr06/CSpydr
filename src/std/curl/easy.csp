#[**************************************************************************
 *                                  _   _ ____  _
 *  Project                     ___| | | |  _ \| |
 *                             / __| | | | |_) | |
 *                            | (__| |_| |  _ <| |___
 *                             \___|\___/|_| \_\_____|
 *
 * Copyright (C) 1998 - 2020, Daniel Stenberg, <daniel@haxx.se>, et al.
 *
 * This software is licensed as described in the file COPYING, which
 * you should have received as part of this distribution. The terms
 * are also available at https://curl.se/docs/copyright.html.
 *
 * You may opt to use, copy, modify, merge, publish, distribute and/or sell
 * copies of the Software, and permit persons to whom the Software is
 * furnished to do so, under the terms of the COPYING file.
 *
 * This software is distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY
 * KIND, either express or implied.
 *
 **************************************************************************]#

[link("libcurl")]

import "curl.csp";
import "options.csp";

macro CURL_BLOB_COPY { 1 }
macro CURL_BLOB_NOCOPY { 0 }

namespace curl {

type curl_blob: struct {
    data: &void,
    lenght: u64,
    flags: u32
};

extern "C" {

    fn curl_easy_init(): &CURL;
    fn curl_easy_setopt(handle: &CURL, option: CURLoption, args: ...): CURLcode;
    fn curl_easy_perform(handle: &CURL): CURLcode;
    fn curl_easy_cleanup(handle: &CURL);

    fn curl_easy_getinfo(handle: &CURL, info: CURLINFO, args: ...): CURLcode;
    fn curl_easy_duphandle(handle: &CURL): &CURL;
    fn curl_easy_reset(handle: &CURL);
    fn curl_easy_recv(handle: &CURL, buffer: &void, buflen: u64, n: &u64): CURLcode;
    fn curl_easy_send(handle: &CURL, buffer: const &void, buflen: u64, n: &u64): CURLcode;
    fn curl_easy_upkeep(handle: &CURL): CURLcode;
}

}