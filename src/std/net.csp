#[ 
    net.csp - Basic networking functionality

    THIS FILE IS PART OF THE STANDARD LIBRARY FOR THE CSPYDR PROGRAMMING LANGUAGE.

    Copyright (c) 2021 - 2022 Spydr06
    CSpydr is distributed under the MIT license.
    This is free software; see the source for copying conditions;
    you may redistribute it under the terms of the MIT license.
    This program has absolutely no warranty.
]#

import "syscall.csp";
import "types.csp";

macro INET_ADDRSTRLEN { 16 }
macro INET6_ADDRSTRLEN { 46 }

namespace std {
    type SockAddr: struct {
        family: std::sa_family_t,
        data: u8 'c[14]
    };

    type Address: struct {
        addr: u32
    };

    type SockAddrIn: struct {
        family: std::sa_family_t,
        port: in_port_t,
        addr: Address,
        zero: u8 'c[8]
    };

    namespace net {
        const INADDR_ANY: u32       = 0x00000000;
        const INADDR_BROADCAST: u32 = 0xffffffff;
        const INADDR_NONE: u32      = 0xffffffff;
        const INADDR_LOOPBACK: u32  = 0x7f000001;
        const INADDR_DUMMY: u32     = 0xc0000008;

        const INADDR_UNSPEC_GROUP: u32      = 0xe0000000;
        const INADDR_ALLHOSTS_GROUP: u32    = 0xe0000001;
        const INADDR_ALLRTRS_GROUP: u32     = 0xe0000002;
        const INADDR_ALLSNOOPERS_GROUP: u32 = 0xe000006a;
        const INADDR_MAX_LOCAL_GROUP: u32   = 0xe00000ff;

        fn send(fd: i32, buf: const &void, length: usize, flags: i32): i64 = syscall::sendto(fd, buf, length, flags);
    }
}