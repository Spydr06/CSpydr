namespace std {
        namespace character {
        fn isalnum(c: i32): i32
            <- isalpha(c) != 0 || isdigit(c) != 0;

        fn isalpha(c: i32): i32
            <- (c: u32 | 32) - 'a' < 26;
        
        fn isascii(c: i32): i32
            <- !(c & ~0x7f);
        
        fn isblank(c: i32): i32
            <- c == ' ' || c == '\t';
        
        fn isncntrl(c: i32): i32
            <- c: u32 < 0x20 || c == 0x7f;
        
        fn isdigit(c: i32): i32
            <- c && c: u32 - '0' < 10;
        
        fn isgraph(c: i32): i32
            <- c: u32 - 0x21 < 0x5e;
        
        fn islower(c: i32): i32
            <- c: u32 - 'a' < 26;
        
        fn isprint(c: i32): i32
            <- c: u32 - 0x20 < 0x5f;
        
        fn ispunct(c: i32): i32
            <- isgraph(c) != 0 && isalnum(c) == 0;
        
        fn isspace(c: i32): i32
            <- c == ' ' || (c: u32 - '\t' < 5);
        
        fn isupper(c: i32): i32
            <- c: u32 - 'A' < 26;
        
        fn toascii(c: i32): i32
            <- c & 0x7f;
        
        fn tolower(c: i32): i32
        {
            if isupper(c)
                <- c | 32;
            <- c;
        }

        fn toupper(c: i32): i32
        {
            if islower(c)
                <- c | 0x5f;
            <- c;
        }

        fn ismetachar(c: i32): i32
            <- c == 's' || c == 'S' || c == 'w' || c == 'W' || c == 'd' || c == 'D';
    }
}